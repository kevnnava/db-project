-- SUB QUERY: QUERY INSIDE ANOTHER QUERY

-- FIND OUT MAX SALARY FROM EMPLOYEES
SELECT MAX(SALARY)
FROM EMPLOYEES;

SELECT FIRST_NAME
FROM EMPLOYEES
WHERE SALARY = 24000;

-- WE HARD CODED THE VALUE OF 24000 WE GOT FROM FIRST QUERY INTO SECOND QUERY
-- NOW JUST AS FUNCTION CALL WE CAN USE THIS QUERY
-- AS A BLOCK OF QUERY THAT CAN GENERATE MAX SALARY ANYTIME
-- SO EVEN IF A MAX SALARY CHANGE CAN CHANGE AT SOME POINT WE WOULD STILL GET THE CORRECT RESULT
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE SALARY = (SELECT MAX(SALARY)
                FROM EMPLOYEES);

-- FIND OUT THE NAME OF THE EMPLOYEE THAT MAKES THE LEAST SALARY
SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY = (SELECT MIN(SALARY) FROM EMPLOYEES);

-- FIND OUT THE NAME OF THE EMPLOYEES THAT MAKES MORE THAN AVERAGE SALARY
SELECT AVG(SALARY) FROM EMPLOYEES;

SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES);

-- DISPLAY ALL EMPLOYEES IF SALARY IS NOT 24000
-- AND FIND MAX
-- ALSO KNOWN AS SECOND MAX SALARY
SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE SALARY != (SELECT MAX(SALARY) FROM EMPLOYEES);

-- WHAT ABOUT 3RD
SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE SALARY < 17000; -- FILTER ALL SALARY LESS THAN 2ND MAX
-- JUST REPLACE THE 17000 WITH ABOVE QUERY
SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE SALARY < (SELECT MAX(SALARY)
                FROM EMPLOYEES
                WHERE SALARY != ( SELECT MAX(SALARY) FROM EMPLOYEES) );

-- FIND OUT THE FIRST_NAME OF EMPLOYEES WHO WORKS IN Executive Department

-- FIND OUT THE Department_id of Executive
SELECT DEPARTMENT_ID FROM DEPARTMENTS
WHERE DEPARTMENT_NAME = 'Executive';

SELECT FIRST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90;

-- NOW COMBINE THEM
SELECT FIRST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS
                       WHERE DEPARTMENT_NAME = 'Executive');

-- FIND OUT THE FIRST_NAME OF EMPLOYEES
-- WHO WORKS IN Executive AND Administrative Departments

-- FIND OUT THE DEPARTMENT_ID OF Executive
-- AND Administrative Department
SELECT DEPARTMENT_ID FROM DEPARTMENTS
WHERE DEPARTMENT_NAME IN ('Executive', 'Administration');

-- FIND OUT THE FIRST_NAME OF EMPLOYEES
-- WHO WORKS IN department_id 90 and 10
SELECT FIRST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (90,10);

-- QUERIES ABOVE COMBINED
SELECT FIRST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID IN ( SELECT DEPARTMENT_ID FROM DEPARTMENTS
                        WHERE DEPARTMENT_NAME IN ('Executive', 'Administration') );

-- RESULT OF SUB QUERIES CAN ALSO BE USED AS ENTIRE TABLE
-- FOR EXAMPLE SELECT * FROM (SUB QUERY GOES HERE)

SELECT FIRST_NAME, LAST_NAME, FIRST_NAME || LAST_NAME AS FULL_NAME
FROM EMPLOYEES
-- WHERE FULL_NAME = 'EllenAbel' WE CANNOT USE ALIAS IN CONDITION
;

SELECT *
FROM (SELECT FIRST_NAME, FIRST_NAME || LAST_NAME AS FULL_NAME
      FROM EMPLOYEES)
WHERE FULL_NAME = 'EllenAbel';

-- FIND OUT THE EMPLOYEE COUNT OF THE DEPARTMENT THAT HAS MOST EMPLOYEE
SELECT DEPARTMENT_ID, COUNT(*) AS EMPLOYEE_COUNT
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

-- FIND OUT THE EMPLOYEE COUNT OF THE DEPARTMENT THAT HAS MOST EMPLOYEE
SELECT MAX(EMPLOYEE_COUNT)
FROM (SELECT DEPARTMENT_ID, COUNT(*) AS EMPLOYEE_COUNT
      FROM EMPLOYEES
      GROUP BY DEPARTMENT_ID);


-- DENSE_RANK FUNCTION THAT FALL INTO CATEGORY OF ANALYTICAL FUNCTIONS
-- DENSE_RANK() OVER  (ORDER BY SALARY DESC)
SELECT FIRST_NAME, SALARY,
       DENSE_RANK() OVER (ORDER BY SALARY DESC) AS SALARY_RANK
FROM EMPLOYEES;

-- NOW WE CAN SEE THIS WHOLE RESULT OF ABOVE QUERY AS A TABLE
-- SELECT FROM THIS "TABLE" AND FILTER THE RESULT
-- BY SALARY_RANK = NTH (the number you want)
SELECT *
FROM (SELECT FIRST_NAME, SALARY,
             DENSE_RANK() OVER (ORDER BY SALARY DESC) AS SALARY_RANK
      FROM EMPLOYEES)
WHERE SALARY_RANK = 4;





